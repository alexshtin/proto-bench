// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: structdef-gogo-v1.proto

package protobench

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GogoV1 struct {
	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BirthDay int64   `protobuf:"varint,2,opt,name=birthDay,proto3" json:"birthDay,omitempty"`
	Phone    string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Siblings int32   `protobuf:"varint,4,opt,name=siblings,proto3" json:"siblings,omitempty"`
	Spouse   bool    `protobuf:"varint,5,opt,name=spouse,proto3" json:"spouse,omitempty"`
	Money    float64 `protobuf:"fixed64,6,opt,name=money,proto3" json:"money,omitempty"`
}

func (m *GogoV1) Reset()         { *m = GogoV1{} }
func (m *GogoV1) String() string { return proto.CompactTextString(m) }
func (*GogoV1) ProtoMessage()    {}
func (*GogoV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9d837b81e69b7b4, []int{0}
}
func (m *GogoV1) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GogoV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GogoV1.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GogoV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GogoV1.Merge(m, src)
}
func (m *GogoV1) XXX_Size() int {
	return m.Size()
}
func (m *GogoV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GogoV1.DiscardUnknown(m)
}

var xxx_messageInfo_GogoV1 proto.InternalMessageInfo

func (m *GogoV1) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GogoV1) GetBirthDay() int64 {
	if m != nil {
		return m.BirthDay
	}
	return 0
}

func (m *GogoV1) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GogoV1) GetSiblings() int32 {
	if m != nil {
		return m.Siblings
	}
	return 0
}

func (m *GogoV1) GetSpouse() bool {
	if m != nil {
		return m.Spouse
	}
	return false
}

func (m *GogoV1) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func init() {
	proto.RegisterType((*GogoV1)(nil), "protobench.GogoV1")
}

func init() { proto.RegisterFile("structdef-gogo-v1.proto", fileDescriptor_b9d837b81e69b7b4) }

var fileDescriptor_b9d837b81e69b7b4 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xcf, 0x31, 0x4b, 0x03, 0x31,
	0x18, 0xc6, 0xf1, 0x7b, 0x6d, 0xef, 0xa8, 0x19, 0x83, 0x68, 0x70, 0x08, 0xc1, 0x29, 0x08, 0x6d,
	0x29, 0x8e, 0x6e, 0x52, 0x70, 0xcf, 0xe0, 0xe0, 0x76, 0x39, 0x63, 0x12, 0xe8, 0xe5, 0x3d, 0x2e,
	0x39, 0xb1, 0xdf, 0xc2, 0xd1, 0x8f, 0xe4, 0xd8, 0xd1, 0x51, 0xee, 0xbe, 0x88, 0xf4, 0x5a, 0xda,
	0x29, 0xff, 0xdf, 0xf0, 0x04, 0x5e, 0x72, 0x13, 0x53, 0xdb, 0x55, 0xe9, 0xcd, 0xbc, 0xcf, 0x2d,
	0x5a, 0x9c, 0x7f, 0xac, 0x16, 0x4d, 0x8b, 0x09, 0x29, 0x19, 0x1f, 0x6d, 0x42, 0xe5, 0xee, 0xbe,
	0x81, 0x14, 0xcf, 0x68, 0xf1, 0x65, 0x45, 0x29, 0x99, 0x86, 0xb2, 0x36, 0x0c, 0x04, 0xc8, 0x4b,
	0x35, 0x36, 0xbd, 0x25, 0x33, 0xed, 0xdb, 0xe4, 0xd6, 0xe5, 0x96, 0x5d, 0x08, 0x90, 0x13, 0x75,
	0x32, 0xbd, 0x22, 0x79, 0xe3, 0x30, 0x18, 0x36, 0x19, 0x07, 0x07, 0xec, 0x17, 0xd1, 0xeb, 0x8d,
	0x0f, 0x36, 0xb2, 0xa9, 0x00, 0x99, 0xab, 0x93, 0xe9, 0x35, 0x29, 0x62, 0x83, 0x5d, 0x34, 0x2c,
	0x17, 0x20, 0x67, 0xea, 0xa8, 0xfd, 0x4f, 0x35, 0x06, 0xb3, 0x65, 0x85, 0x00, 0x09, 0xea, 0x80,
	0xa7, 0xf5, 0x4f, 0xcf, 0x61, 0xd7, 0x73, 0xf8, 0xeb, 0x39, 0x7c, 0x0d, 0x3c, 0xdb, 0x0d, 0x3c,
	0xfb, 0x1d, 0x78, 0xf6, 0x7a, 0x6f, 0x7d, 0x72, 0x9d, 0x5e, 0x54, 0x58, 0x2f, 0xcb, 0x8d, 0xf9,
	0x8c, 0x2e, 0xf9, 0xb0, 0x3c, 0x5f, 0xf5, 0x78, 0x4e, 0x5d, 0x8c, 0xfd, 0xf0, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x5a, 0xf7, 0xbb, 0xc9, 0x0e, 0x01, 0x00, 0x00,
}

func (m *GogoV1) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GogoV1) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GogoV1) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Money != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Money))))
		i--
		dAtA[i] = 0x31
	}
	if m.Spouse {
		i--
		if m.Spouse {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Siblings != 0 {
		i = encodeVarintStructdefGogoV1(dAtA, i, uint64(m.Siblings))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintStructdefGogoV1(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BirthDay != 0 {
		i = encodeVarintStructdefGogoV1(dAtA, i, uint64(m.BirthDay))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintStructdefGogoV1(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintStructdefGogoV1(dAtA []byte, offset int, v uint64) int {
	offset -= sovStructdefGogoV1(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GogoV1) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStructdefGogoV1(uint64(l))
	}
	if m.BirthDay != 0 {
		n += 1 + sovStructdefGogoV1(uint64(m.BirthDay))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovStructdefGogoV1(uint64(l))
	}
	if m.Siblings != 0 {
		n += 1 + sovStructdefGogoV1(uint64(m.Siblings))
	}
	if m.Spouse {
		n += 2
	}
	if m.Money != 0 {
		n += 9
	}
	return n
}

func sovStructdefGogoV1(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStructdefGogoV1(x uint64) (n int) {
	return sovStructdefGogoV1(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GogoV1) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStructdefGogoV1
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GogoV1: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GogoV1: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BirthDay", wireType)
			}
			m.BirthDay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BirthDay |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Siblings", wireType)
			}
			m.Siblings = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Siblings |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spouse", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Spouse = bool(v != 0)
		case 6:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Money", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Money = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipStructdefGogoV1(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthStructdefGogoV1
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStructdefGogoV1(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStructdefGogoV1
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStructdefGogoV1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStructdefGogoV1
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStructdefGogoV1
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStructdefGogoV1
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStructdefGogoV1        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStructdefGogoV1          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStructdefGogoV1 = fmt.Errorf("proto: unexpected end of group")
)
